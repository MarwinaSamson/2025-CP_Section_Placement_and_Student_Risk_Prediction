# Generated by Django 5.2.5 on 2025-10-06 07:40

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("admin_functionalities", "0003_studentrequirements"),
    ]

    operations = [
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Employee ID"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last Name"),
                ),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First Name"),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Middle Name"
                    ),
                ),
                (
                    "full_name",
                    models.CharField(blank=True, editable=False, max_length=150),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        verbose_name="Sex/Gender",
                    ),
                ),
                ("date_of_birth", models.DateField(verbose_name="Date of Birth")),
                (
                    "age",
                    models.PositiveIntegerField(
                        blank=True,
                        editable=False,
                        validators=[
                            django.core.validators.MinValueValidator(18),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Age",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("Teacher I", "Teacher I"),
                            ("Teacher II", "Teacher II"),
                            ("Teacher III", "Teacher III"),
                            ("Head Teacher", "Head Teacher"),
                            ("Principal", "Principal"),
                        ],
                        max_length=50,
                        verbose_name="Position",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Science", "Science"),
                            ("Mathematics", "Mathematics"),
                            ("English", "English"),
                            ("Filipino", "Filipino"),
                            ("Social Studies", "Social Studies"),
                            ("MAPEH", "MAPEH"),
                            ("TLE", "Technology and Livelihood Education"),
                            ("Values Education", "Values Education"),
                        ],
                        max_length=50,
                        verbose_name="Department",
                    ),
                ),
                (
                    "is_adviser",
                    models.BooleanField(default=False, verbose_name="Can be Adviser"),
                ),
                (
                    "is_subject_teacher",
                    models.BooleanField(
                        default=True, verbose_name="Can be Subject Teacher"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Phone")),
                ("address", models.TextField(blank=True, verbose_name="Address")),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="teachers/profiles/",
                        verbose_name="Profile Photo",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Linked User Account",
                    ),
                ),
            ],
            options={
                "verbose_name": "Teacher",
                "verbose_name_plural": "Teachers",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="ChangeHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Record Created"),
                            ("updated", "Profile Updated"),
                            ("role_changed", "Role Changed"),
                            ("deactivated", "Deactivated"),
                            ("reactivated", "Reactivated"),
                        ],
                        max_length=50,
                        verbose_name="Action",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Details of the change (e.g., 'Email updated to new@deped.gov.ph')",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True, verbose_name="Date")),
                ("time", models.TimeField(auto_now_add=True, verbose_name="Time")),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="change_history",
                        to="admin_functionalities.teacher",
                        verbose_name="Teacher",
                    ),
                ),
            ],
            options={
                "verbose_name": "Change History",
                "verbose_name_plural": "Change Histories",
                "ordering": ["-date", "-time"],
            },
        ),
        migrations.CreateModel(
            name="AddUserLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=100, verbose_name="Activity")),
                ("date", models.DateField(auto_now_add=True, verbose_name="Date")),
                ("time", models.TimeField(auto_now_add=True, verbose_name="Time")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Additional Description"),
                ),
                (
                    "affected_first_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="New User's First Name",
                    ),
                ),
                (
                    "affected_last_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="New User's Last Name",
                    ),
                ),
                (
                    "affected_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="New User's Email",
                    ),
                ),
                (
                    "affected_employee_id",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="New User's Employee ID",
                    ),
                ),
                (
                    "affected_is_admin",
                    models.BooleanField(
                        default=False, verbose_name="New User Has Administrator Access"
                    ),
                ),
                (
                    "affected_is_staff_expert",
                    models.BooleanField(
                        default=False, verbose_name="New User Has Staff Expert Access"
                    ),
                ),
                (
                    "affected_is_adviser",
                    models.BooleanField(
                        default=False, verbose_name="New User Has Adviser Access"
                    ),
                ),
                (
                    "affected_is_teacher",
                    models.BooleanField(
                        default=False, verbose_name="New User Has Teacher Access"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="add_user_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Admin/User Who Added",
                    ),
                ),
            ],
            options={
                "verbose_name": "Add User Log",
                "verbose_name_plural": "Add User Logs",
                "ordering": ["-date", "-time"],
                "indexes": [
                    models.Index(
                        fields=["user", "date"], name="admin_funct_user_id_0ee30e_idx"
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="teacher",
            index=models.Index(
                fields=["last_name", "first_name"],
                name="admin_funct_last_na_30a41c_idx",
            ),
        ),
    ]
