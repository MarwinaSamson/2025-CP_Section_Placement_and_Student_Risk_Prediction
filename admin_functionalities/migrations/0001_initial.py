# Generated by Django 5.2.5 on 2025-10-24 07:41

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChangeHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Record Created"),
                            ("updated", "Profile Updated"),
                            ("role_changed", "Role Changed"),
                            ("deactivated", "Deactivated"),
                            ("reactivated", "Reactivated"),
                        ],
                        max_length=50,
                        verbose_name="Action",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Details of the change (e.g., 'Email updated to new@deped.gov.ph')",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True, verbose_name="Date")),
                ("time", models.TimeField(auto_now_add=True, verbose_name="Time")),
            ],
            options={
                "verbose_name": "Change History",
                "verbose_name_plural": "Change Histories",
                "ordering": ["-date", "-time"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="New Enrollment Submission", max_length=200
                    ),
                ),
                ("message", models.TextField()),
                (
                    "notification_type",
                    models.CharField(
                        choices=[("student_enrollment", "Student Enrollment")],
                        default="student_enrollment",
                        max_length=20,
                    ),
                ),
                ("program", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_read", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "program",
                    models.CharField(
                        choices=[
                            ("STE", "Science Technology and Engineering"),
                            ("SPFL", "Special Program in Foreign Language"),
                            (
                                "SPTVL",
                                "Special Program in Technical Vocational Livelihood",
                            ),
                            ("TOP5", "Top 5 Regular Class"),
                            ("HETERO", "Hetero Regular class"),
                            ("OHSP", "Open High School Program"),
                            ("SNED", "Special Needs Education Program"),
                        ],
                        max_length=10,
                        verbose_name="Program",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Section Name")),
                (
                    "building",
                    models.PositiveIntegerField(verbose_name="Building Number"),
                ),
                ("room", models.CharField(max_length=10, verbose_name="Room Number")),
                (
                    "current_students",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Current Students"
                    ),
                ),
                (
                    "max_students",
                    models.PositiveIntegerField(
                        default=40, verbose_name="Max Students"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="section_avatars/",
                        verbose_name="Section Avatar",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SectionSubjectAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        choices=[
                            ("MATHEMATICS", "Mathematics"),
                            ("ENGLISH", "English"),
                            ("SCIENCE", "Science"),
                            ("FILIPINO", "Filipino"),
                            ("ARALING_PANLIPUNAN", "Araling Panlipunan"),
                            ("EDUKASYON_SA_PAGPAPAKATAO", "Edukasyon sa Pagpapakatao"),
                            ("MAPEH", "MAPEH"),
                            ("EDUKASYONG_PANGKABUHAYAN", "Edukasyong Pangkabuhayan"),
                        ],
                        max_length=50,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[("DAILY", "Daily"), ("MWF", "MWF"), ("TTH", "TTH")],
                        max_length=10,
                        verbose_name="Day",
                    ),
                ),
                ("start_time", models.TimeField(verbose_name="Start Time")),
                ("end_time", models.TimeField(verbose_name="End Time")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="StudentRequirements",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("birth_certificate", models.BooleanField(default=False)),
                ("good_moral", models.BooleanField(default=False)),
                ("interview_done", models.BooleanField(default=False)),
                ("reading_assessment_done", models.BooleanField(default=False)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Employee ID"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last Name"),
                ),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First Name"),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Middle Name"
                    ),
                ),
                (
                    "full_name",
                    models.CharField(blank=True, editable=False, max_length=150),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        verbose_name="Sex/Gender",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "age",
                    models.PositiveIntegerField(
                        blank=True,
                        editable=False,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(18),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Age",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("Teacher I", "Teacher I"),
                            ("Teacher II", "Teacher II"),
                            ("Teacher III", "Teacher III"),
                            ("Master Teacher I", "Master Teacher I"),
                            ("Master Teacher II", "Master Teacher II"),
                            ("Master Teacher III", "Master Teacher III"),
                            ("Head Teacher I", "Head Teacher I"),
                            ("Head Teacher II", "Head Teacher II"),
                            ("Head Teacher III", "Head Teacher III"),
                            ("Principal I", "Principal I"),
                            ("Principal II", "Principal II"),
                            ("Principal III", "Principal III"),
                            ("School Head", "School Head"),
                        ],
                        max_length=50,
                        verbose_name="Position",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Science", "Science"),
                            ("Mathematics", "Mathematics"),
                            ("English", "English"),
                            ("Filipino", "Filipino"),
                            ("Social Studies", "Social Studies"),
                            ("MAPEH", "MAPEH"),
                            ("TLE", "Technology and Livelihood Education"),
                            ("Values Education", "Values Education"),
                        ],
                        max_length=50,
                        verbose_name="Department",
                    ),
                ),
                (
                    "is_adviser",
                    models.BooleanField(default=False, verbose_name="Can be Adviser"),
                ),
                (
                    "is_subject_teacher",
                    models.BooleanField(
                        default=True, verbose_name="Can be Subject Teacher"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Phone")),
                ("address", models.TextField(blank=True, verbose_name="Address")),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="teachers/profiles/",
                        verbose_name="Profile Photo",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Teacher",
                "verbose_name_plural": "Teachers",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=30)),
                ("middle_name", models.CharField(blank=True, max_length=30)),
                ("last_name", models.CharField(blank=True, max_length=30)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "force_password_change",
                    models.BooleanField(
                        default=False,
                        verbose_name="Force Password Change on First Login",
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Employee ID"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Position"
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Department"
                    ),
                ),
                (
                    "is_staff_expert",
                    models.BooleanField(
                        default=False, verbose_name="Staff Expert Access"
                    ),
                ),
                (
                    "is_teacher",
                    models.BooleanField(
                        default=False, verbose_name="General Teacher Role"
                    ),
                ),
                (
                    "is_subject_teacher",
                    models.BooleanField(
                        default=False, verbose_name="Subject Teacher Access"
                    ),
                ),
                (
                    "is_adviser",
                    models.BooleanField(default=False, verbose_name="Adviser Access"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User ",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.CreateModel(
            name="AddUserLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=100, verbose_name="Activity")),
                ("date", models.DateField(auto_now_add=True, verbose_name="Date")),
                ("time", models.TimeField(auto_now_add=True, verbose_name="Time")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Additional Description"),
                ),
                (
                    "affected_first_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="New User's First Name",
                    ),
                ),
                (
                    "affected_last_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="New User's Last Name",
                    ),
                ),
                (
                    "affected_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="New User's Email",
                    ),
                ),
                (
                    "affected_employee_id",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="New User's Employee ID",
                    ),
                ),
                (
                    "affected_is_admin",
                    models.BooleanField(
                        default=False, verbose_name="New User Has Administrator Access"
                    ),
                ),
                (
                    "affected_is_staff_expert",
                    models.BooleanField(
                        default=False, verbose_name="New User Has Staff Expert Access"
                    ),
                ),
                (
                    "affected_is_adviser",
                    models.BooleanField(
                        default=False, verbose_name="New User Has Adviser Access"
                    ),
                ),
                (
                    "affected_is_teacher",
                    models.BooleanField(
                        default=False, verbose_name="New User Has Teacher Access"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="add_user_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Admin/User Who Added",
                    ),
                ),
            ],
            options={
                "verbose_name": "Add User Log",
                "verbose_name_plural": "Add User Logs",
                "ordering": ["-date", "-time"],
            },
        ),
    ]
